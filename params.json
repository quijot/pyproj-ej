{"name":"pyProj-ej","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"operaciones con coordenadas geodésicas","google":"","body":"# pyProj-ej\r\n\r\n__pyProj-ej__ utiliza [pyproj][pp] para realizar algunas operaciones con\r\n coordenadas.\r\n\r\n[pyproj][pp] es una interfaz [Python][py] de la librería de proyecciones\r\n cartográficas [PROJ.4][proj].\r\n\r\n# Instalación\r\n\r\n[Descargar](https://github.com/quijot/pyproj-ej/zipball/master) y descomprimir.\r\n\r\n## Requisitos previos\r\n\r\nEn teoría es multiplataforma, es decir que funciona tanto en win como en\r\n GNU/Linux si tenés instalados: [Python][py], [NumPy][np] y [pyproj][pp].\r\n Recomendado extra: [iPython][ipy].\r\n\r\nPara instalarlos en Debian/Ubuntu/Mint/Tuquito/etc.\r\n\r\n    $ sudo apt-get install python python-numpy python-pyproj ipython\r\n\r\n# Uso\r\n\r\nA través del intérprete python (recomendado [iPython][ipy]). Conviene ejecutarlo\r\n desde dentro del directorio de pyproj-ej:\r\n\r\n    $ python\r\n\r\no si tenés ipython instaldo:\r\n\r\n    $ ipython\r\n\r\n## Módulo gms_gyf\r\n\r\nFuncionalidad de conversión entre grados sexagesimales (gº m' s.sss\") y grados\r\n y fracción (g.ggg):\r\n\r\n    from gms_gyf import *\r\n    gms2gyf(grados, minutos, segundos)\r\n    gyf2gms(grados_y_fraccion)\r\n\r\n### Ejemplos\r\n\r\n    gms2gyf(-61,30) = -61.5\r\n    gms2gyf(0,-45)  = -0.75\r\n    gms2gyf(-33)    = -33.0\r\n    gyf2gms(-61.5)  = (-61,30,0.0)\r\n    gyf2gms(-0.75)  = (0,-45,0.0)\r\n\r\n## Módulo geod_proy\r\n\r\nConfiguración de la proyección (tipo mercator transversal):\r\n\r\n    import geod_proy as gp\r\n    proy = gp.config_proy(latitud_de_origen, meridiano_central, falso_este, falso_norte, factor_de_escala, datum)\r\n\r\n### Ejemplo\r\n\r\nLeer y ejecutar el archivo de pruebas __test.py__. Allí se detallan los pasos\r\n de varios ejemplos. Para ejecutarlo desde el directorio donde se encuentra:\r\n\r\n    $ ./test.py\r\n\r\n### Set de archivos de ejemplo\r\n\r\nEl directorio [__coord__][coord_ej] contiene archivos con coordenadas de un caso\r\n real.\r\n\r\nSe obtuvieron a partir del archivo __proy__ a través de una serie de\r\n transformaciones que demuestran su reciprocidad. Dentro del script __test.py__\r\n se explican los pasos realizados.\r\n\r\n# Licencia (a.k.a. _pagate una birra_)\r\n\r\n__pyProj-ej__ se encuentra bajo los términos de la Beer-ware License (Revision 42).\r\nPara mayor información leer\r\n[LICENSE](https://raw.github.com/quijot/pyproj-ej/master/LICENSE).\r\n\r\n[py]: http://www.python.org/ \"Python Programming Language\"\r\n[pp]: https://code.google.com/p/pyproj/ \"pyproj: Pyrex generated python interface to PROJ.4 library\"\r\n[proj]: http://trac.osgeo.org/proj/ \"PROJ.4 - Cartographic Projections Library\"\r\n[np]: http://numpy.scipy.org/ \"NumPy is the fundamental package for scientific computing with Python\"\r\n[ipy]: http://ipython.org/\r\n[coord_ej]: https://github.com/quijot/pyproj-ej/tree/master/coord \"Set de archivos de ejemplo.\"\r\n"}